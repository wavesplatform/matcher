syntax = "proto3";

package waves.dex.grpc.integration;
option java_package = "com.wavesplatform.dex.grpc.integration.services";

import "google/protobuf/empty.proto";
import "waves/amount.proto";
import "waves/order.proto";
import "waves/transaction.proto";
import "waves/events/events.proto";
import "waves/node/grpc/transactions_api.proto";

service WavesBlockchainApi {

  rpc GetStatuses (waves.node.grpc.TransactionsByIdRequest) returns (TransactionsStatusesResponse);

  // TODO Deprecated, remove in >= 2.3.1
  rpc Broadcast (BroadcastRequest) returns (BroadcastResponse);

  rpc CheckedBroadcast (CheckedBroadcastRequest) returns (CheckedBroadcastResponse);

  rpc IsFeatureActivated (IsFeatureActivatedRequest) returns (IsFeatureActivatedResponse);

  rpc AssetDescription (AssetIdRequest) returns (AssetDescriptionResponse);

  rpc HasAssetScript (AssetIdRequest) returns (HasScriptResponse);

  rpc RunAssetScript (RunAssetScriptRequest) returns (RunScriptResponse);

  rpc HasAddressScript (HasAddressScriptRequest) returns (HasScriptResponse);

  rpc RunAddressScript (RunAddressScriptRequest) returns (RunScriptResponse);

  rpc ForgedOrder (ForgedOrderRequest) returns (ForgedOrderResponse);

  rpc GetUtxEvents (google.protobuf.Empty) returns (stream UtxEvent);

  rpc GetCurrentBlockInfo (google.protobuf.Empty) returns (CurrentBlockInfoResponse);

  rpc GetOutgoingLeasing (AddressRequest) returns (GetOutgoingLeasingResponse);

  rpc GetAddressPartialRegularBalance (GetAddressPartialRegularBalanceRequest) returns (GetAddressPartialRegularBalanceResponse);

  rpc GetAddressFullRegularBalance (GetAddressFullRegularBalanceRequest) returns (GetAddressFullRegularBalanceResponse);

  rpc GetBalances (GetBalancesRequest) returns (GetBalancesResponse);

  rpc CheckAddress (CheckAddressRequest) returns (CheckAddressResponse);
}

// Common requests

message AssetIdRequest {
  bytes asset_id = 1;
}

message AddressRequest {
  bytes address = 1;
}

// Common responses

message HasScriptResponse {
  bool has = 1;
}

message RunScriptResponse {
  // empty if there is no script or the script returned TRUE
  oneof result {
    string wrong_input = 1;
    string script_error = 2;
    string unexpected_result = 3;
    Exception exception = 4;
    google.protobuf.Empty denied = 5;
  }
}

// Specific requests and responses

message TransactionsStatusesResponse {
  repeated waves.node.grpc.TransactionStatus transactions_statutes = 1;
}

message BroadcastRequest {
  SignedExchangeTransaction transaction = 1;
}

message BroadcastResponse {
  oneof result {
    bool added = 1;
    string failed = 2;
  }
}

message CheckedBroadcastRequest {
  SignedExchangeTransaction transaction = 1;
}

message CheckedBroadcastResponse {
  oneof result {
    bool unconfirmed = 1; // true == isNew
    google.protobuf.Empty confirmed = 2;
    Failure failed = 3;
  }

  message Failure {
    string message = 1;
    bool can_retry = 2;
  }
}

message IsFeatureActivatedRequest {
  int32 feature_id = 1;
}

message IsFeatureActivatedResponse {
  bool is_activated = 1;
}

message AssetDescriptionResponse {
  oneof maybe_description {
    AssetDescription description = 1;
  }
}

message AssetDescription {
  bytes name = 1;
  int32 decimals = 2;
  bool has_script = 3;
  bool nft = 4;
}

message RunAssetScriptRequest {
  bytes asset_id = 1;
  SignedExchangeTransaction transaction = 2;
}

message RunAddressScriptRequest {
  bytes address = 1;
  waves.Order order = 2;
}

message HasAddressScriptRequest {
  bytes address = 1;
}

// TODO remove after release 2.1.3
message SpendableAssetBalanceRequest {
  bytes address = 1;
  bytes asset_id = 2;
}

// TODO remove after release 2.1.3
message SpendableAssetBalanceResponse {
  int64 balance = 1;
}

message GetAddressPartialRegularBalanceRequest {
  bytes address = 1;
  message Record {
    bytes asset_id = 1;
  }
  repeated Record asset_ids = 2;
}

message GetAddressPartialRegularBalanceResponse {
  message Record {
    bytes asset_id = 1;
    int64 balance = 2;
  }
  repeated Record balances = 1;
}

message ForgedOrderRequest {
  bytes order_id = 1;
}

message ForgedOrderResponse {
  bool is_forged = 1;
}

// TODO rename to BalanceChangesResponse after release 2.1.2
message BalanceChangesFlattenResponse {
  bytes address = 1;
  bytes asset = 2;
  int64 balance = 3;
}

// TODO remove after release 2.1.2
message BalanceChangesResponse {
  message Record {
    bytes address = 1;
    bytes asset = 2;
    int64 balance = 3;
  }
  repeated Record batch = 1;
}

message GetAddressFullRegularBalanceRequest {
  bytes address = 1;
  repeated bytes exclude_asset_ids = 2;
}

message GetAddressFullRegularBalanceResponse {
  message Record {
    bytes asset_id = 1;
    int64 balance = 2;
  }
  repeated Record balances = 1;
}

message CurrentBlockInfoResponse {
  int32 height = 1;
  bytes block_id = 2;
}

message GetOutgoingLeasingResponse {
  int64 outgoing_leasing = 1;
}

message UtxStateResponse {
  repeated UtxTransaction transactions = 1;
}

message GetBalancesRequest {
  // regular: Map[Address, Set[Asset]]
  repeated RegularPair regular = 1;

  // outgoingLeasing: Set[Address]
  repeated bytes outgoingLeasingAddresses = 2;

  message RegularPair {
    bytes address = 1;
    repeated bytes assets = 2;
  }
}

message GetBalancesResponse {
  repeated RegularPair regular = 1;
  repeated OutgoingLeasingPair outgoingLeasing = 2;

  message RegularPair {
    bytes address = 1;
    repeated waves.Amount amount = 2;
  }

  message OutgoingLeasingPair {
    bytes address = 1;
    int64 amount = 2;
  }
}

message CheckAddressRequest {
  bytes address = 1;
}

message CheckAddressResponse {
  bool successfully_checked = 1;
}

// Other entities

message Exception {
  string name = 1;
  string message = 2;
}

message SignedExchangeTransaction {
  ExchangeTransaction transaction = 1;
  repeated bytes proofs = 2;
}

message ExchangeTransaction {
  int32 chain_id = 1;
  bytes sender_public_key = 2;
  waves.Amount fee = 3;
  int64 timestamp = 4;
  int32 version = 5;

  // compatibility with wavesplatform/protobuf-schemas
  oneof data {
    waves.ExchangeTransactionData exchange = 107;
  }
}

message UtxEvent {
  oneof type {
    Switch switch = 1;
    Update update = 2;
  }

  message Switch {
    repeated UtxTransaction transactions = 1;
  }

  message Update {
    repeated Added added = 1;
    repeated Removed removed = 2;

    message Added {
      UtxTransaction transaction = 1;
    }

    message Removed {
      UtxTransaction transaction = 1;
      Reason reason = 2;

      message Reason {
        string name = 1;
        string message = 2;
      }
    }
  }
}

message UtxTransaction {
  bytes id = 1;
  SignedTransaction transaction = 2;
  TransactionDiff diff = 3;
}

message TransactionDiff {
  waves.events.StateUpdate state_update = 1;
  repeated OrderFill order_fills = 2;

  message OrderFill {
    bytes order_id = 1;
    int64 volume = 2;
    int64 fee = 3;
  }
}
